services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      APP_ADDR: :8080
      DB_USER: root
      DB_PASS: pass
      DB_HOST: db
      DB_PORT: "3306"
      DB_NAME: app
    depends_on:
      db:
        condition: service_healthy
    develop:
      watch:
        - action: rebuild
          path: ./

  db:
    image: mysql:latest
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_PASSWORD: pass
      MYSQL_DATABASE: app
    expose:
      - "3306"
    healthcheck:
      test: mysql --user=root --password=pass --execute "SHOW DATABASES;"
      interval: 1s
      timeout: 10s
      retries: 30

  adminer:
    image: adminer:latest
    ports:
      - "8081:8080"
    depends_on:
      db:
        condition: service_healthy
  elasticsearch:
    container_name: "elasticsearch"
    build:
      context: .
      dockerfile: ./es.Dockerfile
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - logger.deprecation.level=debug
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:9.0.2
    ports:
      - "5601:5601"
    restart: always
    environment:
      - "ELASTICSEARCH_HOSTS=http://elasticsearch:9200"
volumes:
  elasticsearch-data:
    driver: local
